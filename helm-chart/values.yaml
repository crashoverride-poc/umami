# Default values for umami
replicaCount: 1

image:
  repository: umami/umami
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 3000
  targetPort: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  limits:
    {}
    # cpu: 500m
    # memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /api/heartbeat
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /api/heartbeat
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []

nodeSelector: {}
tolerations: []
affinity: {}

# Umami Configuration
umami:
  # Database configuration
  databaseUrl: ""
  databaseType: "postgresql"

  # App configuration
  appSecret: ""
  hashSalt: ""

  # Optional configuration
  disableTelemetry: true
  removeTrailingSlash: false
  trackerScriptName: "script.js"

  # Security headers
  forceSSL: false

  # Environment variables
  env: {}

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    postgresPassword: ""
    username: "umami"
    password: ""
    database: "umami"
  primary:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      limits:
        {}
        # cpu: 500m
        # memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
